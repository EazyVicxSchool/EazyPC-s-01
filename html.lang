<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PC Web</title>
    <style>
        body {
            font-family: sans-serif;
            margin: 0;
            overflow-x: hidden;
        }
        a {
            color: rgb(0, 128, 255);
        }
        a:hover {
            color: aquamarine;
        }
        a:visited {
            color: brown;
        }
        #section1 {
            text-align: center;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
        #section1 h2 {
            margin-bottom: 20px;
            display: block;
            margin: 0;
        }
        #section1 a {
            display: block;
            margin-top: 20px;
        }
        .youtube-handle {
            font-weight: bold;
        }
        .section-wrapper {
            /* Added wrapper */
            position: relative;
            height: 300vh; /* 3 sections * 100vh */
        }
        .section {
            height: 100vh;
            justify-content: center;
            align-items: center;
            text-align: center;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            background-size: cover;
            background-position: center;
            transition: opacity 0.5s ease-in-out; /* Reduced transition duration for snappier feel */
            opacity: 1;
            display: flex;
        }
        .section.fade-out {
            opacity: 0;
        }
        #section2 {
            transition: opacity 0.5s ease-in-out; /* Reduced transition duration */
        }
        .section h2 {
            font-size: 3em;
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }
        html,
        body {
            overflow: hidden; /* Prevent default scrolling */
            height: 100%; /* Ensure full viewport height */
        }
        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }
        #section1 {
            background-image: url("images/1.JPG");
            background-size: cover;
            background-position: center;
            height: 100vh;
        }
        #section2 {
            background-image: url("images/3.JPG");
            background-size: cover;
            background-position: center;
            height: 100vh;
        }
        #section3 {
            background-image: url("images/Jan. 2025 PC.PNG");
            background-size: cover;
            background-position: center;
            height: 100vh;
        }
    </style>
</head>
<body>
    <p class="youtube-handle">@EazyVicx</p>

    <div class="section-wrapper">
        <div id="section1" class="section">
            <div class="overlay"></div>
            <h2>Welcome!</h2>
            <a href="#section2">Go to Section 2</a>
        </div>

        <div id="section2" class="section">
            <div class="overlay"></div>
            <h2>Explore</h2>
            <a href="#section3">Go to Section 3</a>
            <a href="#section1">Go to Section 1</a>
        </div>

        <div id="section3" class="section">
            <div class="overlay"></div>
            <h2>Contact Us</h2>
            <a href="#section1">Go to Section 1</a>
        </div>
    </div>

    <nav>
        <a href="#section1">Section 1</a>
        <a href="#section2">Section 2</a>
        <a href="#section3">Section 3</a>
    </nav>

    <p>EazyPC's We Make it Cheap For You!</p>

    <script>
        const sections = document.querySelectorAll(".section");
        const sectionWrapper = document.querySelector(".section-wrapper");
        let currentSection = 0;
        let isScrolling = false;
        let throttleTimer;
        let touchStartY = null;
        let touchEndY = null;
        const touchThreshold = 50; // Minimum swipe distance

        function scrollToSection(index) {
            if (index >= 0 && index < sections.length && index !== currentSection) {
                const prevSection = sections[currentSection];
                const nextSection = sections[index];

                prevSection.classList.add("fade-out");
                nextSection.style.opacity = "1";

                prevSection.addEventListener(
                    "transitionend",
                    function transitionEndHandler() {
                        prevSection.classList.remove("fade-out");
                        currentSection = index;
                        prevSection.removeEventListener(
                            "transitionend",
                            transitionEndHandler
                        );

                        for (let i = 0; i < sections.length; i++) {
                            if (i !== currentSection) {
                                sections[i].style.opacity = "0";
                            }
                        }
                    },
                    { once: true }
                );
            }
        }

        function wheelHandler(event) {
            event.preventDefault();

            if (isScrolling) {
                return;
            }

            const deltaY = event.deltaY;

            if (Math.abs(deltaY) < 25) {
                return;
            }

            isScrolling = true;

            throttleTimer = setTimeout(() => {
                throttleTimer = null;
                isScrolling = false;

                let nextSectionIndex = currentSection;

                if (deltaY > 0 && currentSection < sections.length - 1) {
                    nextSectionIndex++;
                } else if (deltaY < 0 && currentSection > 0) {
                    nextSectionIndex--;
                }

                if (nextSectionIndex !== currentSection) {
                    scrollToSection(nextSectionIndex);
                }
            }, 200);
        }

        function handleTouchStart(event) {
            touchStartY = event.touches[0].clientY;
        }

        function handleTouchMove(event) {
            if (!touchStartY) {
                return;
            }
            touchEndY = event.touches[0].clientY;
        }

        function handleTouchEnd() {
            if (touchStartY === null || touchEndY === null) {
                touchStartY = null;
                touchEndY = null;
                return;
            }

            const deltaY = touchStartY - touchEndY;

            if (Math.abs(deltaY) > touchThreshold) {
                if (deltaY > 0 && currentSection < sections.length - 1) {
                    scrollToSection(currentSection + 1);
                } else if (deltaY < 0 && currentSection > 0) {
                    scrollToSection(currentSection - 1);
                }
            }

            touchStartY = null;
            touchEndY = null;
        }

        window.addEventListener("wheel", wheelHandler, { passive: false });
        sectionWrapper.addEventListener("touchstart", handleTouchStart, { passive: true });
        sectionWrapper.addEventListener("touchmove", handleTouchMove, { passive: true });
        sectionWrapper.addEventListener("touchend", handleTouchEnd, { passive: true });

        for (let i = 1; i < sections.length; i++) {
            sections[i].style.opacity = "0";
        }
    </script>
</body>
</html>
